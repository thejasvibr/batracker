.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_prototyping_tdoa_prototyper.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_prototyping_tdoa_prototyper.py:


Time-difference-of-arrival estimation 
===================================
This prototyping module measures the time delay of arrival (TDOA) of
a sound across channels. 


.. code-block:: default


    import numpy as np 
    import scipy.signal as signal 


    def measure_tdoa(audio, fs,**kwargs):
        '''
        Parameters
        ----------
        audio : Nchannels x Msamples
        fs : float>0
        vsound: float, optional
            Speed of sound in m/s, defaults  to 338m/s
        tdoa_method: function, optional 
            The function used to measure the TDOA. Defaults
            to cross_cor_w_ref_channel.  See Notes
    
        Returns 
        -------
        tdoa: np.array
            The TDOA between channels in seconds. 
    
        Notes
        -----
        The TDOAs between channels can be measured in various ways ie. cross-corre-
        lation, generalised cross-correlation, or a user-defined custom algorithm. 
    
        The tdoa_method function in general  should give out an array of inter-channel 
        TDOAs in units of samples. 
    
        '''
    
        tdoa_method = kwargs.get('tdoa_method', cross_cor_w_ref_channel)
        tdoa_estimate_samples = tdoa_method(audio, **kwargs)
        tdoa = tdoa_estimate_samples/fs
        return tdoa

    def cross_cor_w_ref_channel(audio, **kwargs):
        '''
        Cross correlates a common set of samples with a common reference channel. 
    
        Parameters
        ----------
        audio : np.array 
            Multichannel audio  
        ref_channel : int < Nchannels, optional 
            The reference channel used for all comparisons. Defaults to 
            the last channel. 
    
        Returns
        -------
        cc_tdoa : np.array
            All the estimated TDOAs in units of samples. The order of the 
            outputs is as follows. If :math:`N_{ref}` is the  reference
            channel,  where :math:`N_{ref}` can be any one of :math:`1-N_{channels}`, 
            the order of  the TDOAs are :math:`\Delta \tau_{ref-i}, where i=1:N_{channels}
            and i \neq N_{ref}`
    
        '''
    
        pass

.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.000 seconds)


.. _sphx_glr_download_prototyping_tdoa_prototyper.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: tdoa_prototyper.py <tdoa_prototyper.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: tdoa_prototyper.ipynb <tdoa_prototyper.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
